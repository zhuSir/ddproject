<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xmsmartcity.maintain.dao.FileTypeMapper">
  <resultMap id="BaseResultMap" type="com.xmsmartcity.maintain.pojo.FileType">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="file_type_name" jdbcType="VARCHAR" property="fileTypeName" />
    <result column="file_type_code" jdbcType="VARCHAR" property="fileTypeCode" />
    <result column="creattime" jdbcType="TIMESTAMP" property="creattime" />
    <result column="creat_user_id" jdbcType="INTEGER" property="creatUserId" />
    <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="update_user_id" jdbcType="INTEGER" property="updateUserId" />
    <result column="remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Base_Column_List">
    id, file_type_name, file_type_code, creattime, creat_user_id, updatetime, update_user_id, 
    remark
  </sql>
  <sql id="Rel_Column_List">
    t.id, t.file_type_name, t.file_type_code, t.creattime, t.creat_user_id, t.updatetime, t.update_user_id, 
    t.remark
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from file_type
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from file_type
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xmsmartcity.maintain.pojo.FileType">
    insert into file_type (id, file_type_name, file_type_code, 
      creattime, creat_user_id, updatetime, 
      update_user_id, remark)
    values (#{id,jdbcType=INTEGER}, #{fileTypeName,jdbcType=VARCHAR}, #{fileTypeCode,jdbcType=VARCHAR}, 
      #{creattime,jdbcType=TIMESTAMP}, #{creatUserId,jdbcType=INTEGER}, #{updatetime,jdbcType=TIMESTAMP}, 
      #{updateUserId,jdbcType=INTEGER}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.xmsmartcity.maintain.pojo.FileType">
    insert into file_type
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="fileTypeName != null">
        file_type_name,
      </if>
      <if test="fileTypeCode != null">
        file_type_code,
      </if>
      <if test="creattime != null">
        creattime,
      </if>
      <if test="creatUserId != null">
        creat_user_id,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
      <if test="updateUserId != null">
        update_user_id,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="fileTypeName != null">
        #{fileTypeName,jdbcType=VARCHAR},
      </if>
      <if test="fileTypeCode != null">
        #{fileTypeCode,jdbcType=VARCHAR},
      </if>
      <if test="creattime != null">
        #{creattime,jdbcType=TIMESTAMP},
      </if>
      <if test="creatUserId != null">
        #{creatUserId,jdbcType=INTEGER},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUserId != null">
        #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xmsmartcity.maintain.pojo.FileType">
    update file_type
    <set>
      <if test="fileTypeName != null">
        file_type_name = #{fileTypeName,jdbcType=VARCHAR},
      </if>
      <if test="fileTypeCode != null">
        file_type_code = #{fileTypeCode,jdbcType=VARCHAR},
      </if>
      <if test="creattime != null">
        creattime = #{creattime,jdbcType=TIMESTAMP},
      </if>
      <if test="creatUserId != null">
        creat_user_id = #{creatUserId,jdbcType=INTEGER},
      </if>
      <if test="updateUserId != null">
        update_user_id = #{updateUserId,jdbcType=INTEGER},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xmsmartcity.maintain.pojo.FileType">
    update file_type
    set file_type_name = #{fileTypeName,jdbcType=VARCHAR},
      file_type_code = #{fileTypeCode,jdbcType=VARCHAR},
      creattime = #{creattime,jdbcType=TIMESTAMP},
      creat_user_id = #{creatUserId,jdbcType=INTEGER},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      update_user_id = #{updateUserId,jdbcType=INTEGER},
      remark = #{remark,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="selectFileType" parameterType="map" resultMap="BaseResultMap">
  	select
  	t.id, t.file_type_name, t.file_type_code,count(c.id) fileNum
  	from file_type t,
	(SELECT p.id,f.file_type_id FROM project_user p 
		LEFT JOIN file f on f.project_id=p.project_id
		LEFT JOIN `user` u on u.id=p.user_id AND u.is_del=0
		LEFT JOIN company c on c.id=u.company_id and c.is_del=0
		WHERE p.user_id=#{userId,jdbcType=INTEGER} AND c.responser_id=#{userId,jdbcType=INTEGER} and p.is_del=0) c
  	where t.id=c.file_type_id
  	  <if test="id != null">
        and id=#{id,jdbcType=INTEGER} 
      </if>
      <if test="fileTypeName != null">
        and file_type_name like CONCAT('%',#{fileTypeName,jdbcType=VARCHAR},'%')   
      </if>
      <if test="fileTypeCode != null">
        and file_type_code=#{fileTypeCode,jdbcType=VARCHAR} 
      </if>
      group by t.id, t.file_type_name,t.file_type_code
  </select>
</mapper>