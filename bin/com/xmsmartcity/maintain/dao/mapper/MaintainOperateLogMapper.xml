<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xmsmartcity.maintain.dao.MaintainOperateLogMapper">
  <resultMap id="BaseResultMap" type="com.xmsmartcity.maintain.pojo.MaintainOperateLog">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="fault_info_id" jdbcType="INTEGER" property="faultInfoId" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="title" jdbcType="VARCHAR" property="title" />
    <result column="type" jdbcType="BIT" property="type" />
    <result column="state" jdbcType="BIT" property="state" />
    <result column="fault_state" jdbcType="BIT" property="faultState" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="pics" jdbcType="VARCHAR" property="pics" />
    <result column="createtime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="updatetime" jdbcType="TIMESTAMP" property="updatetime" />
    <result column="is_del" jdbcType="INTEGER" property="isDel" />
    <result column="user_head_pic" jdbcType="VARCHAR" property="userHeadPic" />
  </resultMap>
  <sql id="Base_Column_List">
    id, fault_info_id, user_name,user_id, title, type, state,fault_state, content, pics, createtime, updatetime, 
    is_del
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from maintain_operate_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <!-- 查询列表 -->
  <select id="selectByFaultInfoId" parameterType="map" resultMap="BaseResultMap">
  	select 
    	ml.id, ml.fault_info_id, ml.user_name,ml.user_id, ml.title, 
    	ml.type, ml.state,ml.fault_state, ml.content, ml.pics, ml.createtime, ml.updatetime,u.head_pic user_head_pic
    from maintain_operate_log ml INNER JOIN `user` u ON ml.user_id = u.id
    where ml.fault_info_id = #{faultInfoId,jdbcType=INTEGER}
    ORDER BY ml.createtime desc
    <if test="startIndex != null">
    	<if test="pageSize != null">
    		limit #{startIndex},#{pageSize}
    	</if>
    </if>
  </select>
  
  <!-- 查询相应平均时长 -->
  <select id="selectOperateNumByUserId" parameterType="java.lang.Integer" resultType="java.lang.Integer">
  	select 
	SUM(res.num)/COUNT(res.num)
	FROM(
	select 
	(UNIX_TIMESTAMP(mol.createtime) - UNIX_TIMESTAMP(fi.receivetime))/60/60 num
	FROM project_user pu 
	INNER JOIN maintain_operate_log mol ON pu.user_id = mol.user_id AND pu.is_leader = 1
	INNER JOIN fault_info fi ON mol.fault_info_id = fi.id 
	WHERE pu.user_id = #{userId} AND mol.fault_state = 6 GROUP BY fi.id
	UNION
	SELECT (UNIX_TIMESTAMP(mol.createtime) - UNIX_TIMESTAMP(fi.receivetime))/60/60 num
	FROM index_user_fault iuf INNER JOIN fault_info fi ON iuf.fault_info_id = fi.id 
	INNER JOIN maintain_operate_log mol ON fi.id = mol.fault_info_id
	WHERE iuf.user_id = #{userId} AND mol.fault_state = 6 GROUP BY fi.id
	) res
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from maintain_operate_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.xmsmartcity.maintain.pojo.MaintainOperateLog">
    insert into maintain_operate_log (id, fault_info_id, user_name,user_id, 
      title, type, state,fault_state, content, 
      pics, createtime, updatetime, 
      is_del)
    values (#{id,jdbcType=INTEGER}, #{faultInfoId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR},#{userId,jdbcType=INTEGER}, 
      #{title,jdbcType=VARCHAR}, #{type,jdbcType=BIT}, #{state,jdbcType=BIT},#{faultState,jdbcType=BIT}, #{content,jdbcType=VARCHAR}, 
      #{pics,jdbcType=VARCHAR}, #{createtime,jdbcType=TIMESTAMP}, #{updatetime,jdbcType=TIMESTAMP}, 
      #{isDel,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xmsmartcity.maintain.pojo.MaintainOperateLog">
    insert into maintain_operate_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="faultInfoId != null">
        fault_info_id,
      </if>
      <if test="userName != null">
        user_name,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="faultState != null">
        fault_state,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="pics != null">
        pics,
      </if>
      <if test="createtime != null">
        createtime,
      </if>
      <if test="updatetime != null">
        updatetime,
      </if>
      <if test="isDel != null">
        is_del,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="faultInfoId != null">
        #{faultInfoId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=BIT},
      </if>
      <if test="state != null">
        #{state,jdbcType=BIT},
      </if>
      <if test="faultState != null">
        #{faultState,jdbcType=BIT},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="pics != null">
        #{pics,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDel != null">
        #{isDel,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xmsmartcity.maintain.pojo.MaintainOperateLog">
    update maintain_operate_log
    <set>
      <if test="faultInfoId != null">
        fault_info_id = #{faultInfoId,jdbcType=INTEGER},
      </if>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=BIT},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=BIT},
      </if>
      <if test="faultState != null">
        fault_state = #{faultState,jdbcType=BIT},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="pics != null">
        pics = #{pics,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="updatetime != null">
        updatetime = #{updatetime,jdbcType=TIMESTAMP},
      </if>
      <if test="isDel != null">
        is_del = #{isDel,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xmsmartcity.maintain.pojo.MaintainOperateLog">
    update maintain_operate_log
    set fault_info_id = #{faultInfoId,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR},
      user_id = #{userId,jdbcType=INTEGER},
      title = #{title,jdbcType=VARCHAR},
      type = #{type,jdbcType=BIT},
      state = #{state,jdbcType=BIT},
      fault_state = #{faultState,jdbcType=BIT},
      content = #{content,jdbcType=VARCHAR},
      pics = #{pics,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      updatetime = #{updatetime,jdbcType=TIMESTAMP},
      is_del = #{isDel,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>